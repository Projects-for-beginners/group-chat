{"version":3,"sources":["index.js"],"names":["getTime","date","Date","getHours","substr","getMinutes","Chat","props","handleCallbackMessage","FormData","setState","prevState","allMessage","handleCallbackContact","PeopleData","activePeople","state","message","this","MessageList","dataParentToChild","className","Contact","parentCallback","Form","React","Component","onTrigger","event","value","preventDefault","handleChange","bind","target","code","ctrlKey","trim","id","onSubmit","placeholder","autoComplete","type","onChange","onKeyUp","e","handleEnter","contactList","name","activeContacts","PeopleList","contactsList","map","people","People","time","firstLetter","toUpperCase","messagesList","Message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b433577e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction getTime() {\r\n  let date = new Date();\r\n  let hours = (\"0\" + date.getHours()).substr(-2, 2);\r\n  let minutes = (\"0\" + date.getMinutes()).substr(-2, 2);\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allMessage: [],\r\n    };\r\n  }\r\n\r\n  handleCallbackMessage = (FormData) => {\r\n    if (FormData) {\r\n      this.setState((prevState) => ({\r\n        allMessage: [...prevState.allMessage, FormData],\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleCallbackContact = (PeopleData) => {\r\n    if (PeopleData) {\r\n      this.setState({ activePeople: PeopleData });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let message;\r\n    if (this.state.allMessage) {\r\n      message = (\r\n        <MessageList\r\n          dataParentToChild={this.state.allMessage}\r\n          activePeople={this.state.activePeople}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"contacts\">\r\n          {\" \"}\r\n          <Contact parentCallback={this.handleCallbackContact} />{\" \"}\r\n        </div>\r\n        <div className=\"chat\">\r\n          {message}\r\n        </div>\r\n        <Form parentCallback={this.handleCallbackMessage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onTrigger = this.onTrigger.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleEnter(event) {\r\n    if ( event.code === 'Enter' && event.ctrlKey) {\r\n      event.preventDefault();\r\n      this.props.parentCallback( event.target.value.trim(/(\\s|\\n|\\r)/) );\r\n      this.setState({ value: \"\" });\r\n    }\r\n  }\r\n\r\n  onTrigger = (event) => {\r\n    this.props.parentCallback(this.state.value);\r\n    this.setState({ value: \"\" });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"form\" onSubmit={this.onTrigger}>\r\n        <textarea\r\n          id=\"input\"\r\n          placeholder=\"Your message\"\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n          onKeyUp={(e) => this.handleEnter(e)}\r\n        />\r\n        <button id=\"sendButton\"></button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contactList: [\r\n        \"Darrel Steward\",\r\n        \"Ralph Edwards\",\r\n        \" Albert Flores\",\r\n        \"Ronald Richards\",\r\n        \"Kathryn Murphy\",\r\n      ],\r\n      name: \"\",\r\n      activeContacts: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.parentCallback(this.state.contactList[0]);\r\n  }\r\n\r\n  render() {\r\n    return <PeopleList dataParentToChild={this.state.contactList} />;\r\n  }\r\n}\r\n\r\nfunction PeopleList(props) {\r\n  const contacts = props.dataParentToChild;\r\n  const contactsList = contacts.map((people) => (\r\n    //key especificada dentro del array.\r\n    <People key={people} value={people} />\r\n  ));\r\n\r\n  return <ul id=\"Contacts-List\"> {contactsList} </ul>;\r\n}\r\n\r\nfunction People(props) {\r\n  //take time\r\n  const time = getTime();\r\n  const firstLetter = props.value.trim(' ')[0].toUpperCase();\r\n  \r\n  return (\r\n    <li className=\"people\">\r\n      <div className=\"PeopleImage\">{firstLetter}</div>\r\n      <div className=\"PeopleInfo\">\r\n        <span>\r\n          <p className=\"PeopleName\"> {props.value}</p>\r\n          <p className=\"People-Date\"> {time} </p>\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction MessageList(props) {\r\n  const messages = props.dataParentToChild;\r\n  const messagesList = messages.map((message) => (\r\n    //key especificada dentro del array.\r\n    <Message key={message} value={message} activePeople={props.activePeople} />\r\n  ));\r\n\r\n  return <ul id=\"messages\"> {messagesList} </ul>;\r\n}\r\n\r\nfunction Message(props) {\r\n  //take time\r\n  const time = getTime();\r\n  const firstLetter = props.activePeople.trim(' ')[0].toUpperCase();\r\n  return (\r\n    <li>\r\n      <div className=\"PeopleImage\">{firstLetter}</div>\r\n      <span>\r\n        <p className=\"Message-User item\">{props.activePeople}</p>\r\n        <p className=\"Text item\">{props.value}</p>\r\n        <p className=\"Message-Date\">{time}</p>\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Chat />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}